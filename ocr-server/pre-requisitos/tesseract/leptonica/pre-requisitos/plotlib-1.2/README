/*====================================================================*
 -  Copyright (C) 2001 Leptonica.  All rights reserved.
 -  This software is distributed in the hope that it will be
 -  useful, but with NO WARRANTY OF ANY KIND.
 -  No author or distributor accepts responsibility to anyone for the
 -  consequences of using this software, or for whether it serves any
 -  particular purpose or works at all, unless he or she says so in
 -  writing.  Everyone is granted permission to copy, modify and
 -  redistribute this source code, for commercial or non-commercial
 -  purposes, with the following restrictions: (1) the origin of this
 -  source code must not be misrepresented; (2) modified versions must
 -  be plainly marked as such; and (3) this notice may not be removed
 -  or altered from any source or modified source distribution.
 *====================================================================*/

README  (24 Mar 07)
-------------------

gunzip plotlib-1.2.tar.gz
tar -xvf plotlib-1.2.tar


0.  This directory contains a very small subset of leptonlib, which
    can be used to build a plotting library and to make standalone
    plotting programs or to link with other libraries to allow
    programmatic generation of gnuplot 7.3.2 plots.
    
    Requirement: gnuplot (7.3.2 or later) must be available.
    You must either have gnuplot invokable by 'gnuplot', or
    change the source in gplot.c to specify the path.

    In the prog/ directory we give two simple programs that use
    this plotting library.  One takes input data in a simple file
    format; the other shows you how to generate the gnuplots
    programmatically.

1.  This directory includes source, function prototypes, nodebug object
    and libraries for Linux on x86, compiled test programs, and
    one sample data file.

    Prototypes, object code and executables are easily made,
    as described in 2, 3 and 4.

2.  In case you want to make prototypes:

    Make xtractprotos from leptonlib.  Then:

    make allprotos

3.  When you compile, object code is put into a tree with root
    at the place where you un-tar'd.  If you want to change the
    location of the generated object code, change the ROOT_DIR
    variable in the Makefile.

4.  To compile and link, just use 'make' in src and prog directories.
    It is also possible to make a debug version, as well as one that
    builds and uses shared libraries.  If you want to use shared
    libraries, you need to add the location of the shared
    libraries to the LD_LIBRARY_PATH.  See the Makefile for other
    details.


